name: Deploy Infrastructure

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Terragrunt init
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_directory }}
          tg_command: 'init'
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        run: terraform fmt -check

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terragrunt init
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_directory }}
          tg_command: 'init'
      - name: Terraform plan
        run: terraform plan

  terraform-apply:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/task_1' && github.event_name == 'push'
    needs: terraform-plan
    permissions:
      id-token: write  
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Terragrunt init
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_directory }}
          tg_command: 'init'
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform apply
        run: terraform apply -auto-approve
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ROLE_ARN }}:role/GithubActionsRole
          aws-region: ${{ vars.AWS_REGION }}
